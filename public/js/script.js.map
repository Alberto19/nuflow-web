{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('app', [\r\n        'ui.materialize',\r\n        'ui.router',\r\n        'ngResource',\r\n        'satellizer'\r\n        ])\r\n        .config(['$httpProvider',($httpProvider)=>{\r\n            // Add http interceptors\r\n            $httpProvider.interceptors.push('authInterceptor');\r\n        }])\r\n        .run(['$rootScope', '$state', 'authData', ($rootScope, $state, authData)=> {\r\n            // Page changed event\r\n            $rootScope.$on('$stateChangeStart', (event, next, current)=> {\r\n                let token = authData.getToken();\r\n\r\n                if (!token && current.name == '/') {\r\n                    event.preventDefault();\r\n                    $state.go('login');\r\n                }\r\n            });\r\n\r\n            // Global forbidden event\r\n            $rootScope.$on('forbidden', ()=> {\r\n                // Force redirect to login again\r\n                $state.go('login');\r\n            });\r\n        }]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(['$locationProvider', '$stateProvider', '$urlRouterProvider', ($locationProvider, $stateProvider, $urlRouterProvider)=> {\r\n            // Use URLs without hash\r\n            $locationProvider.html5Mode(true);\r\n\r\n            // Login routes\r\n            $stateProvider\r\n                .state({\r\n                    name:'login',\r\n                    url: '/',\r\n                    controller: 'LoginController as vm',\r\n                    templateUrl: 'views/layouts/login.html'\r\n                })\r\n                .state({\r\n                    name:'register',\r\n                    url: '/cadastro',\r\n                    controller: 'RegisterController as vm',\r\n                    templateUrl: 'views/layouts/register.html'\r\n                })\r\n\r\n                // Home routes\r\n                .state('main', {\r\n                    abstract: true,\r\n                    url: '',\r\n                    controller: 'LayoutController as vm',\r\n                    templateUrl: 'views/layouts/main.html',\r\n                })\r\n                 .state('main.feed', {\r\n                    url: '/feed',\r\n                    controller: 'FeedController as vm',\r\n                    templateUrl: 'views/partials/feed.html',\r\n                })\r\n\r\n        }]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('config', config);\r\n\r\n    function config() {\r\n        return {\r\n            baseApiUrl: \"https://nuflow.herokuapp.com/api\"\r\n            // baseApiUrl: \"http://localhost:3000/api\"\r\n        };\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('auth', auth);\r\n\r\n    auth.$inject = ['$http', 'authData', 'config'];\r\n\r\n    function auth($http, authData, config) {\r\n        var service = {\r\n            login: login,\r\n            register: register,\r\n            logout: logout\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n        function login(user) {\r\n            return $http.post(config.baseApiUrl + '/user/login',user)\r\n            .then((data) =>{\r\n                    var loginData = data.data;\r\n                    authData.parseData(loginData);\r\n                },\r\n                 (data)=>{\r\n                    console.log(data);\r\n                });\r\n        }\r\n\r\n        function register(user) {\r\n            return $http.post(config.baseApiUrl + '/user/cadastrar', user)\r\n            .then((data)=> {\r\n                    var loginData = data.data;\r\n                    authData.parseData(loginData);\r\n                },(data)=> {\r\n                    console.log(data);\r\n                });\r\n        }\r\n\r\n        function logout() {\r\n            authData.clearData();\r\n        }\r\n    }\r\n})();\n(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('app')\r\n\t\t.factory('authData', authData);\r\n\r\n\tauthData.$inject = [];\r\n\r\n\tfunction authData() {\r\n\t\t/** Cached Instances **/\r\n\t\tvar cachedToken = null;\r\n\r\n\t\t/* Service */\r\n\t\tvar service = {\r\n\t\t\tparseData: parseData,\r\n\t\t\tclearData: clearData,\r\n\r\n\t\t\tgetToken: getToken,\r\n\t\t\tsetToken: setToken,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\t////////////////\r\n\r\n\t\t/* Login Data */\r\n\t\tfunction parseData(data) {\r\n\t\t\tsetToken(data.token);\r\n\t\t}\r\n\r\n\t\tfunction clearData() {\r\n\t\t\tsetToken();\r\n\t\t}\r\n\r\n\t\t/* API Token - Value */\r\n\t\tfunction getToken() {\r\n\t\t\tif (!cachedToken) {\r\n\t\t\t\tvar value = localStorage.getItem('token');\r\n\t\t\t\tcachedToken = value ? value : null;\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedToken;\r\n\t\t}\r\n\r\n\t\tfunction setToken(token) {\r\n\t\t\tcachedToken = token;\r\n\r\n\t\t\tif (token) {\r\n\t\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\t}else{\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('authInterceptor', authInterceptor);\r\n\r\n    authInterceptor.$inject = ['$rootScope', '$q', 'authData'];\r\n\r\n    function authInterceptor($rootScope, $q, authData) {\r\n        var service = {\r\n            request: request,\r\n            responseError: responseError\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n\r\n        function request(config) {\r\n            var token = authData.getToken();\r\n\r\n            // Inject API token on all requests\r\n            if (token) {\r\n                config.headers['x-access-token'] = token;\r\n            }\r\n\r\n            return config;\r\n        }\r\n\r\n        function responseError(response) {\r\n            // Forbidden response\r\n            if (response.status == 403) {\r\n                // Remove login data\r\n                authData.clearData();\r\n\r\n                // Emit global forbidden event\r\n                $rootScope.$emit('forbidden');\r\n            }\r\n\r\n            return $q.reject(response);\r\n        }\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .factory('Desejo', Desejo);\r\n\r\n    Desejo.$inject = ['$http', 'config'];\r\n\r\n    function Desejo($http, config) {\r\n        var service = {\r\n            getDesejos: getDesejos,\r\n            cadastrar:cadastrar,\r\n            getDesejo:getDesejo,\r\n            editar:editar,\r\n            deletar:deletar\r\n        };\r\n\r\n        return service;\r\n\r\n        ////////////////\r\n        function getDesejos() {\r\n            return $http.get(config.baseApiUrl + '/desejo');\r\n        };\r\n        function cadastrar(desejo){\r\n            return $http.post(config.baseApiUrl + '/desejo/create', desejo);\r\n        };\r\n        function getDesejo(desejo) {\r\n            return $http.get(config.baseApiUrl + '/desejo/edit/' + desejo);\r\n        }\r\n        function editar(desejo) {\r\n            return $http.post(config.baseApiUrl + '/desejo/editar/', desejo);\r\n        }\r\n        function deletar(desejo) {\r\n            return $http.post(config.baseApiUrl + '/desejo/delete/' + desejo);\r\n        }\r\n    }\r\n})();\r\n\n(function () {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('Search', Search);\n\n    Search.$inject = ['$http', 'config'];\n\n    function Search($http, config) {\n        var service = {\n            searchLocations: searchLocations,\n        };\n        return service;\n\n        ////////////////\n\n        function searchLocations(location){\n            return $http.post(config.baseApiUrl + '/search/places', location);\n        };\n    }\n})();\n\n(function() {\n'use strict';\n\n\t// Usage:\n\t// \n\t// Creates:\n\t// \n\n\tangular\n\t\t.module('app')\n\t\t.component('balada', {\n\t\t\ttemplateUrl:'components/html/balada.component.html',\n\t\t\tcontroller: BaladaController,\n\t\t\tbindings: {\n\t\t\t\tname: '=',\n\t\t\t\tadress: '=',\n\t\t\t\tphone: '=',\n\t\t\t\trating: '=',\n\t\t\t\tsite: '=',\n\t\t\t\tmapsUrl: '=',\n\t\t\t\tdays: '=',\n\t\t\t\treviews: '=',\n\t\t\t\tphotos: '=',\n\t\t\t},\n\t\t});\n\n\t//NavigationController.$inject = ['dependency1'];\n\tfunction BaladaController() {\n\t\tvar $ctrl = this;\n\t\t\n\n\t\t////////////////\n\n\t\t$ctrl.$onInit = function() { };\n\t\t$ctrl.$onChanges = function(changesObj) { };\n\t\t$ctrl.$onDestory = function() { };\n\t}\n})();\n(function() {\r\n'use strict';\r\n\r\n\t// Usage:\r\n\t// \r\n\t// Creates:\r\n\t// \r\n\r\n\tangular\r\n\t\t.module('app')\r\n\t\t.component('navigation', {\r\n\t\t\ttemplateUrl:'components/html/navigation.component.html',\r\n\t\t\tcontroller: NavigationController,\r\n\t\t\tbindings: {\r\n\t\t\t\tshow: '=',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t//NavigationController.$inject = ['dependency1'];\r\n\tfunction NavigationController() {\r\n\t\tvar $ctrl = this;\r\n\t\t\r\n\r\n\t\t////////////////\r\n\r\n\t\t$ctrl.$onInit = function() { };\r\n\t\t$ctrl.$onChanges = function(changesObj) { };\r\n\t\t$ctrl.$onDestory = function() { };\r\n\t}\r\n})();\n(function () {\n\t'use strict';\n\tangular\n\t\t.module('app')\n\t\t.component('search', {\n\t\t\ttemplateUrl: 'components/html/search.component.html',\n\t\t\tcontroller: SearchController,\n\t\t\tbindings: {\n\t\t\t\tBinding: '=',\n\t\t\t},\n\t\t});\n\n\tfunction SearchController() {\n\t\tvar $ctrl = this;\n\n\n\t\t////////////////\n\n\t\t$ctrl.$onInit = function () {};\n\t\t$ctrl.$onChanges = function (changesObj) {};\n\t\t$ctrl.$onDestory = function () {};\n\t}\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('FeedController', FeedController);\r\n\r\n    FeedController.$inject = ['$state', 'Search'];\r\n\r\n    function FeedController($state, Search) {\r\n        var vm = this;\r\n        vm.locations = null;\r\n        vm.radius = 4000;\r\n\r\n        if (navigator.geolocation) {\r\n            navigator\r\n                .geolocation\r\n                .getCurrentPosition((position) => {\r\n                    vm.location = [position.coords.latitude, position.coords.longitude];\r\n                    vm.radius /= 6371;\r\n                    let find = {\r\n                        location: vm.location,\r\n                        radius: vm.radius,\r\n                        keyword: 'C'\r\n                    };\r\n                    Search.searchLocations(find).then(\r\n                        (result) => {\r\n                            console.log(result);\r\n                            vm.locations = result.data;\r\n                        },\r\n                        () => {\r\n\r\n                        }\r\n                    );\r\n                });\r\n        } else {\r\n            alert(\"Geolocation is not supported by this browser.\");\r\n        };\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('LayoutController', LayoutController);\r\n\r\n    LayoutController.$inject = ['auth', '$state'];\r\n\r\n    function LayoutController(auth, $state) {\r\n        var vm = this;\r\n\r\n        vm.logout = logout;\r\n        vm.desejos = desejos;\r\n\r\n        function logout() {\r\n            auth.logout();\r\n            $state.go('login');\r\n        }\r\n        function desejos() {\r\n            $state.go('login');\r\n        }\r\n       \r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', 'auth'];\r\n\r\n    function LoginController($state, auth) {\r\n        var vm = this;\r\n        vm.user ={\r\n            email:null,\r\n            password:null\r\n        }\r\n\r\n        vm.login = login;\r\n        ////////////////\r\n\r\n        function login() {\r\n            auth.login(vm.user).then(\r\n                ()=> {\r\n                    $state.go('main.feed');\r\n                },\r\n                (data)=> {\r\n                    console.log(data);\r\n                });\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('app')\r\n\t\t.controller('RegisterController', RegisterController);\r\n\r\n\tRegisterController.$inject = ['auth', '$state'];\r\n\tfunction RegisterController(auth, $state) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {\r\n\t\t\temail: null,\r\n\t\t\tpassword:null,\r\n\t\t\tgenre:null\r\n\t\t};\r\n\t\tvm.register = register;\r\n\r\n\t\tfunction register() {\r\n\t\t\tauth.register(vm.user)\r\n\t\t\t\t.then((response) =>{\r\n\t\t\t\t\tauth.setToken(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(()=>{\r\n\t\t\t\t\t$state.go('register');\r\n\t\t\t\t});\r\n\t\t};\r\n\t}\r\n})();"],"file":"script.js"}